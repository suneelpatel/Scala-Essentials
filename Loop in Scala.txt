=========================================================================================================
Scala For loop
===============
In scala, For loop is known as for-comprehensions. 
It can be used to iterate, filter and return an iterated collection. 
The for-comprehension looks a bit like a for-loop in imperative languages, except that 
it constructs a "list" of the results of all iterations.

Syntax:

for( i <- range){  
    // statements to be executed  
}  

'In the above syntax, range is a value which has start and end point. 
You can pass range by using to or until keyword.

Exmaple 1: (While traversing an array)
--------------------------------------
for(i<-1 to 5) 
println(i)

Output:
1
2
3
4
5

Exmaple 2: (we have multiple generators in for loop)
----------------------------------------------------
for(i<-1 to 3; j<-1 to 3)
println(10*i+j)

Output:
11
12
13
21
22
23
31
32
33

Exmaple 3: (we can put condition in multiple generators in for loop)
--------------------------------------------------------------------
for(i<-1 to 3; j<-1 to 3 if i == j)
println(10*i+j)

Output:
11
22
33

Exmaple 4: (We can introduce variable in for loop)
--------------------------------------------------
for(i<-1 to 3; x = 4-i; j<-x to 3)
println(10*i+j)

Output:
13
22
23
31
32
33

Exmaple 5:(if the body of for loop starts with the yield, it returns a collection of values)
--------------------------------------------------------------------------------------------
val x = for(i<-1 to 20) yield i*2.50
Output:
x: scala.collection.immutable.IndexedSeq[Double] = Vector(2.5, 5.0, 7.5, 10.0, 12.5, 15.0, 17.5, 20.0, 22.5, 25.0, 27.5, 30.0, 32.5, 35.0, 37.5, 40.0, 42.5, 45.0, 
47.5, 50.0)
val in = "Hello World"
var sum = 0
for(i<-0 until in.length) sum +=i
print(sum)

Exmaple 5: (for-loop Example using by keyword)
for(i<-1 to 10 by 2)
println(i)

Output:
1
3
5
7
9

===========================================================================================================
Foreach Loop
============
In the below code we have use three approaches of for-each loop. You can implement any of them according to your need.

Exmaple 1:
----------
var args = "Hello"
args.foreach(arg=> println(arg))

Output:
H
e
l
l
o

or
args.foreach(println)

Output:
H
e
l
l
o

Exmaple 2: 
----------
val x = List(1,2,3)
x.foreach(println)

Output:
1
2
3

========================================================================================================
While Loop
===========
Scala while loop
In Scala, while loop is used to iterate code till the specified condition. 
It tests boolean expression and iterates again and again. 
You are recommended to use while loop if you don't know number of iterations prior.

Syntax:

while(boolean expression){  
    // Statements to be executed  
}


Example 1:
-------------
object MainObject {  
   def main(args: Array[String]) {  
      var a = 10;                       // Initialization  
      while( a<=20 ){                // Condition  
         println(a);  
         a = a+2                        // Incrementation  
      }  
   }  
}

Output:
10
12
14
16
18
20

Example 2:
object Demo_4 {  
   def main(args: Array[String]) {  
      var a = 10;                       // Initialization  
      while( a<=20 ){                // Condition  
         println("Value of a:" + a);  
         a = a+1;                        // Incrementation  
      }  
   }  
}

Output:
Value of a: 10
Value of a: 11
Value of a: 12
Value of a: 13
Value of a: 14
Value of a: 15
Value of a: 16
Value of a: 17
Value of a: 18
Value of a: 19

==========================================================================================================
Do-while Loop
==============
Do-while loop in scala, repeat a statement until false is returned by boolean expression.

Syntax:
-------
do {// expression....} while
(condition)


Example 1:
-----------

object MainObject {  
   def main(args: Array[String]) {  
        var a = 10;         // Initialization  
        do {  
            println( a );  
            a = a + 2;      // Increment  
        }  
        while( a <= 20 )     // Condition  
   }  
}  

Output:

10
12
14
16
18
20


